<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.web.dao.MessageDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.app.web.entity.Message" id="messageMap">
        <result property="id" column="id"/>
        <result property="createTime" column="create_time"/>
        <result property="fromMemberId" column="from_member_id"/>
        <result property="toMemberId" column="to_member_id"/>
        <result property="status" column="status"/>
        <result property="forKey" column="for_key"/>
        <result property="type" column="type"/>
        <result property="isread" column="isread"/>
    </resultMap>

	<select id="queryObject" resultType="com.app.web.entity.Message">
		select * from gm_message where id = #{value}
	</select>

	<select id="queryList" resultType="com.app.web.entity.Message">
		SELECT mem.username,comm.content commentContent,mess.status,mess.create_time,mess.for_key_id from gm_message mess
		LEFT JOIN gm_member mem on mem.id=mess.from_member_id
		LEFT JOIN gm_comment comm on comm.id=mess.for_key and mess.status=0
		LEFT JOIN gm_comment_faver faver on faver.member_id=mess.from_member_id and mess.status=1
		where mess.from_member_id=#{memberId}
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by mess.id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		SELECT count(*) from gm_message mess
		LEFT JOIN gm_member mem on mem.id=mess.from_member_id
		LEFT JOIN gm_comment comm on comm.id=mess.for_key and mess.status=0
		LEFT JOIN gm_comment_faver faver on faver.member_id=mess.from_member_id and mess.status=1
		where mess.from_member_id=#{memberId}
	</select>
	 
	<insert id="save" parameterType="com.app.web.entity.Message" useGeneratedKeys="true" keyProperty="id">
		insert into gm_message
		(
			`create_time`, 
			`from_member_id`, 
			`to_member_id`, 
			`status`, 
			`for_key`, 
			`type`, 
			`isread`,
			`for_key_id`
		)
		values
		(
			now(), 
			#{fromMemberId}, 
			#{toMemberId}, 
			#{status}, 
			#{forKey}, 
			#{type}, 
			#{isread},
			#{forKeyId}
		)
	</insert>
	 
	<update id="update" parameterType="com.app.web.entity.Message">
		update gm_message 
		<set>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="fromMemberId != null">`from_member_id` = #{fromMemberId}, </if>
			<if test="toMemberId != null">`to_member_id` = #{toMemberId}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="forKey != null">`for_key` = #{forKey}, </if>
			<if test="type != null">`type` = #{type}, </if>
			<if test="isread != null">`isread` = #{isread}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from gm_message where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from gm_message where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
	<!-- 批量设置已读 -->
	<update id="updateReaded">
		update gm_message <set>  isread=1 </set> where from_member_id = #{fromMemberId}
	</update>
</mapper>